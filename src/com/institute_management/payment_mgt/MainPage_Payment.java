/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.institute_management.payment_mgt;

import com.institute_management.attendance_new.*;
import com.institute_management.DataSourse.DataSource;
import com.institute_management.configurations.Config;
import com.institute_management.course_mgt.createCourse;
import com.institute_management.main.NewJFrame;
import com.institute_management.student.UI.studentUpdate;
import static com.institute_management.user_mgt.UI.NewLogin2.logger;
import com.institute_management.util.CommonMethods;
import static com.institute_management.util.CommonMethods.validateMobileNo;
import com.institute_management.util.Configurations;
import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/**
 *
 * @author malindad
 */
public class MainPage_Payment extends javax.swing.JFrame {

    Config config = new Config();

    dbConnection a = new dbConnection();
    NewPaymentDbConnection conn = new NewPaymentDbConnection();

    Calendar cal = Calendar.getInstance();
    String curMonth = new SimpleDateFormat("MMMM").format(cal.getTime()).toLowerCase();
    String curYear = (new SimpleDateFormat("yyyy").format(cal.getTime())).toLowerCase();
    HashMap<Integer, String> monthMap_local = new HashMap<Integer, String>();
    //payment array: this chage for LIT institute as they asked all payments in one bill
    public ArrayList<paymentBean> paymentArray = new ArrayList<paymentBean>();
    public CommonMethods cmMethds = new CommonMethods();
    String s_id = null;

    public MainPage_Payment() {

    }

    public MainPage_Payment(String StudentID) throws SQLException {
        initComponents();
        tbl1.getModel().addTableModelListener(new CheckBoxModelListener());
        cmMethds.setMonthMap();
        monthMap_local = cmMethds.monthMap;
        textTotalFee.setText("0.00");
        s_id = StudentID;
        loadStudentImage();

        //  ArrayList<String[]> all_classes = a.get_all_Courses(s_id);
        //load all class payment status
        HashMap<Integer, Object[]> tblData = a.get_all_class_payment_history(s_id);
        DefaultTableModel model = (DefaultTableModel) tbl1.getModel();
        model.setRowCount(0);
        for (int i = 1; i <= tblData.size(); i++) {
            model.addRow(tblData.get(i));

        }
        lblName.setText(a.get_SNameFromID(s_id).toString());
        lblID.setText(s_id);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        textTotalFee = new javax.swing.JTextField();
        txtCashIn = new javax.swing.JTextField();
        txtBalance = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        attendaence_history_pane = new javax.swing.JTextPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        payment_history_pane = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        current_bill_pane = new javax.swing.JTextPane();
        jLabel31 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255), 2));

        tbl1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course ID", "Fee", "CardType", "Last Paymnet", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl1.setGridColor(new java.awt.Color(51, 102, 255));
        tbl1.setRowHeight(25);
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
        });
        tbl1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbl1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);
        if (tbl1.getColumnModel().getColumnCount() > 0) {
            tbl1.getColumnModel().getColumn(0).setPreferredWidth(300);
            tbl1.getColumnModel().getColumn(1).setPreferredWidth(50);
            tbl1.getColumnModel().getColumn(2).setMinWidth(70);
            tbl1.getColumnModel().getColumn(2).setPreferredWidth(70);
            tbl1.getColumnModel().getColumn(2).setMaxWidth(70);
            tbl1.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbl1.getColumnModel().getColumn(4).setPreferredWidth(20);
            tbl1.getColumnModel().getColumn(4).setMaxWidth(20);
        }

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Total Fee");

        textTotalFee.setEditable(false);
        textTotalFee.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        textTotalFee.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textTotalFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTotalFeeActionPerformed(evt);
            }
        });

        txtCashIn.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        txtCashIn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCashIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCashInActionPerformed(evt);
            }
        });
        txtCashIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCashInKeyReleased(evt);
            }
        });

        txtBalance.setEditable(false);
        txtBalance.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        txtBalance.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Balance");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Cash IN");

        jButton1.setBackground(new java.awt.Color(102, 153, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 255));
        jButton1.setText("PAY SELECTED COURSES");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 51, 102));
        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 51));
        jButton2.setText("PAY SELECTED COURSES WITH DISCOUNT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textTotalFee)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCashIn, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBalance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textTotalFee)
                    .addComponent(txtCashIn)
                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(jLabel18))
                    .addComponent(jLabel17))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        attendaence_history_pane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        attendaence_history_pane.setOpaque(false);
        jScrollPane2.setViewportView(attendaence_history_pane);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        payment_history_pane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jScrollPane3.setViewportView(payment_history_pane);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3))
        );

        jScrollPane4.setViewportView(current_bill_pane);

        jLabel31.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 153, 0));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Current Bill Pane");

        jLabel13.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 153, 0));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Attendance History");

        jLabel12.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 153, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Payment History");

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Payment Management");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/institute_management/resources/images/icons/430102-32.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N

        lblID.setFont(new java.awt.Font("Cambria Math", 1, 12)); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/institute_management/resources/images/MainFrame/administrator-32.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(243, 243, 243)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 773, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(206, 206, 206)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(495, 495, 495)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel1)))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel31))))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int x = 0;
        HashMap<String, Integer> successStatus = new HashMap<String, Integer>();
        int count = 0;
        Calendar cal = Calendar.getInstance();
        String curMonth = new SimpleDateFormat("MMMM").format(cal.getTime()).toLowerCase();
        Calendar cal_prev = Calendar.getInstance();
        cal_prev.add(Calendar.MONTH, -1);
        String curMonth_prev = new SimpleDateFormat("MMMM").format(cal.getTime()).toLowerCase();

        String msg = "Payment Status !" + System.lineSeparator() + System.lineSeparator();
        try {

            Connection con = new DataSource().getConnection();
            con.setAutoCommit(false);
            //insert to bill table
            String bill_id = a.insert_to_bill_details(paymentArray, con, Configurations.UserBean.getUserName());
            //insert to payment table
            String Payment_SMS = lblName.getText().toString() + " is paid for following class(es) on " + new SimpleDateFormat("YYYY-MM-dd").format(new Date()) + "-NLC-";
            if (!bill_id.equals("0")) {
                boolean haspaymentSMSbody = false;
                for (int i = 0; i < paymentArray.size(); i++) {
                    paymentBean pbean = new paymentBean();
                    pbean = paymentArray.get(i);
                    ArrayList<String> months = new ArrayList<String>();
                    months.add(paymentArray.get(i).getMonthYear().toString().split("-")[0]);
                    pbean.setMonth(months);
                    pbean.setYear(paymentArray.get(i).getMonthYear().toString().split("-")[1]);
                    boolean value = a.makePayment(pbean, con);
                    if (value) {
                        String co_des = a.getCourseDesc(pbean.getCourseID());
                        Payment_SMS = Payment_SMS + "Rs " + pbean.getAmount() + " for " + co_des + " Month of " + pbean.getMonth().get(0) + "-NLC-";
                        haspaymentSMSbody = true;
                    }

                }
                con.commit();
                //insert payment sms
                String contact_array[] = a.get_stdnt_SMS_contact(s_id).split(",");
                String f_mob = null;

                boolean xx = validateMobileNo(contact_array[0]);
                if (xx) {
                    f_mob = contact_array[0];
                } else {
                    boolean xxx = validateMobileNo(contact_array[1]);
                    if (xxx) {
                        f_mob = contact_array[1];
                    }
                }
                if (f_mob != null) {
                    if (haspaymentSMSbody) {
                        a.insert_payment_SMS(Payment_SMS, f_mob, s_id);
                    }
                } else {
                    JOptionPane.showMessageDialog(new JFrame(), lblName.getText().toString() + "(" + s_id + ") has Invalid Mobile Number.SMS not sent");
                }

            }

            con.close();
            if (!bill_id.equals("0")) {
                a.printBill(bill_id);
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Error when generate Bill_ID");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Error Occured");
        }

        //reload payment table
        try {

            HashMap<Integer, Object[]> tblData = a.get_all_class_payment_history(s_id);
            DefaultTableModel model = (DefaultTableModel) tbl1.getModel();
            model.setRowCount(0);
            for (int i = 1; i <= tblData.size(); i++) {
                model.addRow(tblData.get(i));
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new JFrame(), "error");
        }
        paymentArray.clear();
        current_bill_pane.setText(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCashInKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCashInKeyReleased
        txtBalance.setText((Double.parseDouble(txtCashIn.getText())) - (Double.parseDouble(textTotalFee.getText())) + "0");
    }//GEN-LAST:event_txtCashInKeyReleased

    private void txtCashInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCashInActionPerformed

    }//GEN-LAST:event_txtCashInActionPerformed

    private void textTotalFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTotalFeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTotalFeeActionPerformed

    private void tbl1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbl1PropertyChange

    }//GEN-LAST:event_tbl1PropertyChange

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        int x = 0;
        int count = 0;
        double fee = 0;

        //        for (int i = 0; i < tbl1.getRowCount(); i++) {
        //            String a = tbl1.getValueAt(i, 4) != null ? tbl1.getValueAt(i, 4).toString() : "null";
        //
        //            if (a.equals("true")) {
        //                fee = fee + Double.parseDouble(tbl1.getValueAt(i, 1).toString());
        //            }
        //        }
        //        textTotalFee.setText(fee + "0");
        //load payment details
        try {
            ArrayList<String> payment_history = a.getPaymentDetails(tbl1.getValueAt(tbl1.getSelectedRow(), 0).toString(), s_id, 11);
            payment_history_pane.setText("");
            for (int i = 0; i < payment_history.size(); i++) {
                appendToPane(payment_history_pane, payment_history.get(i));
                //jTextPane1.append(attendance_history.get(i));
                //attendaence_history_pane.append(System.lineSeparator());
            }
        } catch (Exception ex) {
            Logger.getLogger(MainPage_Payment.class.getName()).log(Level.SEVERE, null, ex);
        }
        //load attendance details
        try {
            ArrayList<String> attendance_history = a.get_attendance_history(s_id, tbl1.getValueAt(tbl1.getSelectedRow(), 0).toString());
            attendaence_history_pane.setText("");
            for (int i = 0; i < attendance_history.size(); i++) {
                appendToPane(attendaence_history_pane, attendance_history.get(i));
                //jTextPane1.append(attendance_history.get(i));
                //attendaence_history_pane.append(System.lineSeparator());
            }
        } catch (Exception ex) {
            Logger.getLogger(MainPage_Payment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbl1MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        this.dispose();
        NewJFrame a;
        try {
            a = new NewJFrame();
            a.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(createCourse.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         int j = a.okcancel("This Discount can not reverse.Are you sure ?");
        if (j == 0) {
        
        int x = 0;
        double discount_amount = 500;
        HashMap<String, Integer> successStatus = new HashMap<String, Integer>();
        int count = 0;
        Calendar cal = Calendar.getInstance();
        String curMonth = new SimpleDateFormat("MMMM").format(cal.getTime()).toLowerCase();
        Calendar cal_prev = Calendar.getInstance();
        cal_prev.add(Calendar.MONTH, -1);
        String curMonth_prev = new SimpleDateFormat("MMMM").format(cal.getTime()).toLowerCase();

        String msg = "Payment Status !" + System.lineSeparator() + System.lineSeparator();
        try {
            
            //apply discount amount to payment array,
                int pay_arraySize = paymentArray.size();
                double discount_for_one_course = discount_amount / pay_arraySize;

                for (int i = 0; i < paymentArray.size(); i++) {
                    paymentBean pbean1 = new paymentBean();
                    pbean1 = paymentArray.get(i);
                    pbean1.setAmount(discount_for_one_course);
                    pbean1.setComment("Full Amount with Discount");
                }

            Connection con = new DataSource().getConnection();
            con.setAutoCommit(false);
            //insert to bill table
            String bill_id = a.insert_to_bill_details(paymentArray, con, Configurations.UserBean.getUserName());
            //insert to payment table
            String Payment_SMS = lblName.getText().toString() + " is paid for following class(es) on " + new SimpleDateFormat("YYYY-MM-dd").format(new Date()) + "-NLC-";
            if (!bill_id.equals("0")) {
                boolean haspaymentSMSbody = false;
                for (int i = 0; i < paymentArray.size(); i++) {
                    paymentBean pbean = new paymentBean();
                    pbean = paymentArray.get(i);
                    ArrayList<String> months = new ArrayList<String>();
                    months.add(paymentArray.get(i).getMonthYear().toString().split("-")[0]);
                    pbean.setMonth(months);
                    pbean.setYear(paymentArray.get(i).getMonthYear().toString().split("-")[1]);
                    boolean value = a.makePayment(pbean, con);
                    if (value) {
                        String co_des = a.getCourseDesc(pbean.getCourseID());
                        Payment_SMS = Payment_SMS + "Rs " + pbean.getAmount() + " for " + co_des + " Month of " + pbean.getMonth().get(0) + "-NLC-";
                        haspaymentSMSbody = true;
                    }

                }
                con.commit();
                //insert payment sms
                String contact_array[] = a.get_stdnt_SMS_contact(s_id).split(",");
                String f_mob = null;

                boolean xx = validateMobileNo(contact_array[0]);
                if (xx) {
                    f_mob = contact_array[0];
                } else {
                    boolean xxx = validateMobileNo(contact_array[1]);
                    if (xxx) {
                        f_mob = contact_array[1];
                    }
                }
                if (f_mob != null) {
                    if (haspaymentSMSbody) {
                        a.insert_payment_SMS(Payment_SMS, f_mob, s_id);
                    }
                } else {
                    JOptionPane.showMessageDialog(new JFrame(), lblName.getText().toString() + "(" + s_id + ") has Invalid Mobile Number.SMS not sent");
                }

            }

            con.close();
            if (!bill_id.equals("0")) {
                a.printBill(bill_id);
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Error when generate Bill_ID");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Error Occured");
        }

        //reload payment table
        try {

            HashMap<Integer, Object[]> tblData = a.get_all_class_payment_history(s_id);
            DefaultTableModel model = (DefaultTableModel) tbl1.getModel();
            model.setRowCount(0);
            for (int i = 1; i <= tblData.size(); i++) {
                model.addRow(tblData.get(i));
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new JFrame(), "error");
        }
        paymentArray.clear();
        current_bill_pane.setText(null);
        }else{
             JOptionPane.showMessageDialog(new JFrame(), "Action Terminated");
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    public class CheckBoxModelListener implements TableModelListener {

        private static final int BOOLEAN_COLUMN = 4;

        public void tableChanged(TableModelEvent e) {
            boolean isFirstMonth = false;
            String[] last_payment;
            int last_payment_year = 0;
            String last_payment_month = null;
            try {
                int row = tbl1.getSelectedRow();
                int column = e.getColumn();
                if (column == BOOLEAN_COLUMN) {
                    TableModel model = (TableModel) e.getSource();
                    String columnName = model.getColumnName(column);
                    String course_name = model.getValueAt(row, 0).toString();

                    String cardType = model.getValueAt(row, 2).toString();
                    Double classFee = Double.parseDouble(model.getValueAt(row, 1).toString());
                    Boolean checked = (Boolean) model.getValueAt(row, column);
                    String monthYear = model.getValueAt(row, 3).toString();
                    if (checked) {
                        paymentBean pBean = new paymentBean();
                        pBean.setAmount(classFee);
                        pBean.setCardType(cardType);
                        pBean.setCourseID(course_name);
                        pBean.setComment("Full Payment");// this is not actual card type. they should have to get the half payments also
                        pBean.setMonthYear(monthYear);
                        pBean.setS_id(s_id);
                        pBean.setDate(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(Calendar.getInstance().getTime()).toLowerCase());
                        pBean.setPayment_initiate_interface("Attendance_interface");
                        paymentArray.add(pBean);

                        //load current bill pane
                        current_bill_pane.setText(null);
                        double x = 0.0;
                        for (int i = 0; i < paymentArray.size(); i++) {
                            appendToPane(current_bill_pane, paymentArray.get(i).getCourseID() + " --> " + paymentArray.get(i).getMonthYear() + " --> " + paymentArray.get(i).getComment());
                            x = x + paymentArray.get(i).getAmount();
                        }
                        textTotalFee.setText(x + "");

                    } else {
                        //this else part is used to reove beans from arraylist.which means, once someone check curses the if he uncheck,then those beans should remove from arraylist
                        for (int i = 0; i < paymentArray.size(); i++) {
                            if (course_name.equals(paymentArray.get(i).getCourseID()) && monthYear.equals(paymentArray.get(i).getMonthYear())) {
                                paymentArray.remove(i);
                                i--;
                            }
                        }
                        //load current bill pane
                        current_bill_pane.setText(null);
                        double x = 0.0;
                        for (int i = 0; i < paymentArray.size(); i++) {
                            appendToPane(current_bill_pane, paymentArray.get(i).getCourseID() + " --> " + paymentArray.get(i).getMonthYear() + " --> " + paymentArray.get(i).getComment());
                            x = x + paymentArray.get(i).getAmount();
                        }
                        textTotalFee.setText(x + "");
                    }
                }
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage_Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage_Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage_Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage_Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {

                    new MainPage_Payment().setVisible(true);

                } catch (Exception ex) {
                    Logger.getLogger(MainPage_Payment.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void loadStudentImage() {

        try {
            File f = new File(config.student_image_path + initial_page.bean_sid.getS_id() + ".jpg");
            ImageIcon image;
            if (f.exists() && !f.isDirectory()) {
                image = new ImageIcon(config.student_image_path + initial_page.bean_sid.getS_id() + ".jpg");
            } else {
                image = new ImageIcon(config.student_image_path + "error.jpg");
            }
        } catch (Exception e) {

            //------------------------log Start--------------------------------------------
            logger.error(studentUpdate.class + ".loadImage() ->error" + e);
            //-------------------------log End---------------------------------------------

        }

    }

    private void appendToPane(JTextPane tp, String msg) {

        Color c;
        if (msg.contains("PENDING")) {
            c = Color.RED;
        } else {
            c = Color.BLUE;
        }
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);

        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Lucida Console");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_JUSTIFIED);

        int len = tp.getDocument().getLength();
        tp.setCaretPosition(len);
        tp.setCharacterAttributes(aset, false);
        tp.replaceSelection(msg + System.lineSeparator());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane attendaence_history_pane;
    private javax.swing.JTextPane current_bill_pane;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JTextPane payment_history_pane;
    private javax.swing.JTable tbl1;
    private javax.swing.JTextField textTotalFee;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtCashIn;
    // End of variables declaration//GEN-END:variables
}
