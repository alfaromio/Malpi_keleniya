/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.institute_management.course_mgt.course_stop;

import com.institute_management.DataSourse.DataSource;
import com.institute_management.attendance_new.dbConnection;
import com.institute_management.configurations.Config;
import static com.institute_management.util.CommonMethods.validateMobileNo;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author malindad
 */
public class StopMain extends javax.swing.JFrame {

    C_StopDBClass conn = new C_StopDBClass();
    dbConnection a = new dbConnection();
    Config conf = new Config();
    
    public StopMain() {
        initComponents();
        
        //load class details table again
        try {
            HashMap<Integer, Object[]> tblData = conn.getStopEligibleClasses();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            for (int i = 0; i < tblData.size(); i++) {
                model.addRow(tblData.get(i));
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Class ID", "Start / End ", "Ended Time", "Class Type", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(600);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
        }

        jButton1.setText("Stop Class");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Adobe Caslon Pro Bold", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pending Classes For Stop");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int x = 0;
        int count = 0;
        String errorClass = "";
        DataSource dataSourse = new DataSource();
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            Boolean isChecked = jTable1.getValueAt(i, 4) != null;
            
            if (isChecked) {
                String course_id = jTable1.getValueAt(i, 0).toString();
                String time = jTable1.getValueAt(i, 2).toString();
                String desc = a.getCourseDesc(course_id);
                
                try {
                    Connection con = null;
                    con = dataSourse.getConnection();
                    con.setAutoCommit(false);
                    x = conn.Insert_class_conduct_details(course_id, time,con);
                    if(x==0){
                        errorClass = errorClass+course_id+" , ";
                    }
                    else{
                        boolean out = conn.create_AbsenceRecords(course_id, con);
                        if(out){
                            con.commit();
                            con.close();
                        }else{
                            con.rollback();     
                            con.close();
                        }
                    }
                } catch (Exception ex) {
                    break;
                }
                count++;
                if (x != 1) {
                    break;
                }
                
                // send SMS
                try{
                Connection con1 = null;
                con1 = dataSourse.getConnection();
                ResultSet rs = null;
                PreparedStatement pst = null;
                DateFormat dateFormat2 = new SimpleDateFormat("YYYY-MM-dd");
                String dateattendence2 = dateFormat2.format(new Date());
                String Query = "select * from attendence where c_id = ? and `completeDate`= ?";
                pst = con1.prepareStatement(Query);
                pst.setString(1, course_id);
                pst.setString(2, dateattendence2);
                rs = pst.executeQuery();
                while(rs.next()){
                    int atten = rs.getInt("attendence");
                    String s_id = rs.getString("s_id");
                    String s_name = a.get_SNameFromID(s_id);
                    String in_time_array[] = rs.getString("time").split(":");
                    String in_Time = in_time_array[0]+":"+in_time_array[1];
                    String contact_array[] =  a.get_stdnt_SMS_contact(s_id).split(",");
                    
                    String f_mob = null;

                            boolean xx = validateMobileNo(contact_array[0]);
                            if (xx) {
                                f_mob = contact_array[0];
                            } else {
                                boolean xxx = validateMobileNo(contact_array[1]);
                                if (xxx) {
                                    f_mob = contact_array[1];
                                }
                            }
                    if (f_mob != null) {
                    if(atten==1){
                        a.insert_attend_SMS(s_name, desc, in_Time, time, f_mob, s_id);
                    }else{
                        a.insert_not_attend_SMS(s_name, desc, f_mob, s_id);
                    }
                    }else{
                        JOptionPane.showMessageDialog(new JFrame(), s_name +"("+s_id+") has Invalid Mobile Number.SMS not sent");
                    }
                }
           
                
                }catch(Exception ex){
                    System.out.println(ex);
                }
            }
        }
        
        if (errorClass.equals("")) {
            JOptionPane.showMessageDialog(new JFrame(), count + "Class End Successfully");
        } else {
            errorClass = errorClass.substring(0, errorClass.length() - 1);
            JOptionPane.showMessageDialog(new JFrame(), "error Occured. Data not Save for following classes"+System.lineSeparator()+errorClass);
        }

        //load extra class table again
       //load class details table again
        try {
            HashMap<Integer, Object[]> tblData = conn.getStopEligibleClasses();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            for (int i = 0; i < tblData.size(); i++) {
                model.addRow(tblData.get(i));
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StopMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StopMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StopMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StopMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StopMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
