/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.institute_management.course_mgt;

import com.institute_management.payment_mgt.*;
import com.institute_management.course_mgt.*;
import static com.institute_management.course_mgt.test.oneTimeStudentID;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Malinda Ranabahu
 */
public class paymentPOPUP extends javax.swing.JFrame {

    double monthlyFee = selectCourse.OnlyForCourseEditBean.getMonthlyFee();
    double courseFee = selectCourse.OnlyForCourseEditBean.getTotalCourseFee();
    double payment = (courseFee > 0.00) ? courseFee : monthlyFee;

    public paymentPOPUP() {
        initComponents();
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.MONTH, -1);
        String prvMonth = new SimpleDateFormat("MMMM").format(cal.getTime());
        double monthlyFee = selectCourse.OnlyForCourseEditBean.getMonthlyFee();
        double courseFee = selectCourse.OnlyForCourseEditBean.getTotalCourseFee();
        double payment = (courseFee > 0.00) ? courseFee : monthlyFee;
        try {
            switch (prvMonth) {
                case "January":
                    January.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "February":
                    February.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "March":
                    March.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "April":
                    April.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "May":
                    May.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "June":
                    June.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "July":
                    July.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "August":
                    August.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "September":
                    September.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "October":
                    October.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "November":
                    November.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;
                case "December":
                    December.setSelected(true);
                    lblTotalAmount.setText(Double.toString(payment));
                    break;

            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        January = new javax.swing.JCheckBox();
        February = new javax.swing.JCheckBox();
        March = new javax.swing.JCheckBox();
        April = new javax.swing.JCheckBox();
        May = new javax.swing.JCheckBox();
        June = new javax.swing.JCheckBox();
        July = new javax.swing.JCheckBox();
        August = new javax.swing.JCheckBox();
        September = new javax.swing.JCheckBox();
        October = new javax.swing.JCheckBox();
        November = new javax.swing.JCheckBox();
        December = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        lblTotalAmount = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cmbYear = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        January.setText("January");
        January.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JanuaryActionPerformed(evt);
            }
        });

        February.setText("February");
        February.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FebruaryActionPerformed(evt);
            }
        });

        March.setText("March");
        March.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarchActionPerformed(evt);
            }
        });

        April.setText("April");
        April.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AprilActionPerformed(evt);
            }
        });

        May.setText("May");
        May.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MayActionPerformed(evt);
            }
        });

        June.setText("June");
        June.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JuneActionPerformed(evt);
            }
        });

        July.setText("July");
        July.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JulyActionPerformed(evt);
            }
        });

        August.setText("August");
        August.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AugustActionPerformed(evt);
            }
        });

        September.setText("September");
        September.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeptemberActionPerformed(evt);
            }
        });

        October.setText("October");
        October.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OctoberActionPerformed(evt);
            }
        });

        November.setText("November");
        November.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovemberActionPerformed(evt);
            }
        });

        December.setText("December");
        December.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecemberActionPerformed(evt);
            }
        });

        jLabel1.setText("Total Amount");

        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        String year = Integer.toString(Calendar.getInstance().get(Calendar.YEAR));
        String LastYear = Integer.parseInt(year)-1+"";
        cmbYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { year,LastYear }));
        cmbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbYearActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Payment Year");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(77, 77, 77))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addComponent(lblTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(January)
                                    .addComponent(July))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(February)
                                    .addComponent(August)))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(March)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(April)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(May)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(June))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(September)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(October)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(November)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(December)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {April, August, December, February, January, July, June, March, May, November, October, September});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(January)
                    .addComponent(February)
                    .addComponent(March)
                    .addComponent(April)
                    .addComponent(May)
                    .addComponent(June))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(July)
                    .addComponent(August)
                    .addComponent(September)
                    .addComponent(October)
                    .addComponent(November)
                    .addComponent(December))
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AprilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AprilActionPerformed
        if (April.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }

    }//GEN-LAST:event_AprilActionPerformed

    private void JulyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JulyActionPerformed
        if (July.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_JulyActionPerformed

    private void JanuaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JanuaryActionPerformed
        if (January.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_JanuaryActionPerformed

    private void FebruaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FebruaryActionPerformed
        if (February.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_FebruaryActionPerformed

    private void MarchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarchActionPerformed
        if (March.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_MarchActionPerformed

    private void MayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MayActionPerformed
        if (May.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_MayActionPerformed

    private void JuneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JuneActionPerformed
        if (June.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_JuneActionPerformed

    private void AugustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AugustActionPerformed
        if (August.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_AugustActionPerformed

    private void SeptemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeptemberActionPerformed
        if (September.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_SeptemberActionPerformed

    private void OctoberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OctoberActionPerformed
        if (October.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_OctoberActionPerformed

    private void NovemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovemberActionPerformed
        if (November.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_NovemberActionPerformed

    private void DecemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecemberActionPerformed
        if (December.isSelected()) {
            double amount = Double.parseDouble(lblTotalAmount.getText()) + monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        } else {
            double amount = Double.parseDouble(lblTotalAmount.getText()) - monthlyFee;
            lblTotalAmount.setText(Double.toString(amount));
        }
    }//GEN-LAST:event_DecemberActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            ArrayList<String> a = new ArrayList<String>();
            if (January.isSelected()) {
                a.add("January");
            }
            if (February.isSelected()) {
                a.add("February");
            }
            if (March.isSelected()) {
                a.add("March");
            }
            if (April.isSelected()) {
                a.add("April");
            }
            if (May.isSelected()) {
                a.add("May");
            }
            if (June.isSelected()) {
                a.add("June");
            }
            if (July.isSelected()) {
                a.add("July");
            }
            if (August.isSelected()) {
                a.add("August");
            }
            if (September.isSelected()) {
                a.add("September");
            }
            if (October.isSelected()) {
                a.add("October");
            }
            if (November.isSelected()) {
                a.add("November");
            }
            if (December.isSelected()) {
                a.add("December");
            }

            int x = new com.institute_management.payment_mgt.PaymentDbConnection().makeBatchPayment(selectCourse.OnlyForCourseEditBean.getCourseID(), oneTimeStudentID, a);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbYearActionPerformed
        try {
            String tableID = "payments_" + cmbYear.getSelectedItem().toString() + "_" + selectCourse.OnlyForCourseEditBean.getCourseID();
            int paymentResult = new com.institute_management.payment_mgt.PaymentDbConnection().checkPaymentYear(tableID);
            if (paymentResult == 0) {
                JOptionPane.showMessageDialog(new JFrame(), "No Records Found");
                cmbYear.setSelectedItem(Calendar.getInstance().get(Calendar.YEAR)+"");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Error occured");
        }

    }//GEN-LAST:event_cmbYearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(paymentPOPUP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(paymentPOPUP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(paymentPOPUP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(paymentPOPUP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new paymentPOPUP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox April;
    private javax.swing.JCheckBox August;
    private javax.swing.JCheckBox December;
    private javax.swing.JCheckBox February;
    private javax.swing.JCheckBox January;
    private javax.swing.JCheckBox July;
    private javax.swing.JCheckBox June;
    private javax.swing.JCheckBox March;
    private javax.swing.JCheckBox May;
    private javax.swing.JCheckBox November;
    private javax.swing.JCheckBox October;
    private javax.swing.JCheckBox September;
    private javax.swing.JComboBox cmbYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTotalAmount;
    // End of variables declaration//GEN-END:variables
}
